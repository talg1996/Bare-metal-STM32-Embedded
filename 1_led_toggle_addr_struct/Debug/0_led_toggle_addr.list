
0_led_toggle_addr.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000002cc  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000164  080002cc  080002cc  000012cc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000430  08000438  00001438  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .init_array   00000004  08000430  08000430  00001430  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .fini_array   00000004  08000434  08000434  00001434  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .data         00000000  24000000  24000000  00001438  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .bss          0000001c  24000000  08000438  00002000  2**2
                  ALLOC
  7 ._user_heap_stack 00000604  2400001c  08000438  0000201c  2**0
                  ALLOC
  8 .ARM.attributes 0000002e  00000000  00000000  00001438  2**0
                  CONTENTS, READONLY
  9 .debug_info   000000ae  00000000  00000000  00001466  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_abbrev 00000089  00000000  00000000  00001514  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_aranges 00000048  00000000  00000000  000015a0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_rnglists 0000002c  00000000  00000000  000015e8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_macro  00000b3d  00000000  00000000  00001614  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_line   000000fd  00000000  00000000  00002151  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_str    00003067  00000000  00000000  0000224e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .comment      00000043  00000000  00000000  000052b5  2**0
                  CONTENTS, READONLY
 17 .debug_frame  00000058  00000000  00000000  000052f8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line_str 0000006b  00000000  00000000  00005350  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080002cc <__do_global_dtors_aux>:
 80002cc:	b510      	push	{r4, lr}
 80002ce:	4c05      	ldr	r4, [pc, #20]	@ (80002e4 <__do_global_dtors_aux+0x18>)
 80002d0:	7823      	ldrb	r3, [r4, #0]
 80002d2:	b933      	cbnz	r3, 80002e2 <__do_global_dtors_aux+0x16>
 80002d4:	4b04      	ldr	r3, [pc, #16]	@ (80002e8 <__do_global_dtors_aux+0x1c>)
 80002d6:	b113      	cbz	r3, 80002de <__do_global_dtors_aux+0x12>
 80002d8:	4804      	ldr	r0, [pc, #16]	@ (80002ec <__do_global_dtors_aux+0x20>)
 80002da:	f3af 8000 	nop.w
 80002de:	2301      	movs	r3, #1
 80002e0:	7023      	strb	r3, [r4, #0]
 80002e2:	bd10      	pop	{r4, pc}
 80002e4:	24000000 	.word	0x24000000
 80002e8:	00000000 	.word	0x00000000
 80002ec:	08000418 	.word	0x08000418

080002f0 <frame_dummy>:
 80002f0:	b508      	push	{r3, lr}
 80002f2:	4b03      	ldr	r3, [pc, #12]	@ (8000300 <frame_dummy+0x10>)
 80002f4:	b11b      	cbz	r3, 80002fe <frame_dummy+0xe>
 80002f6:	4903      	ldr	r1, [pc, #12]	@ (8000304 <frame_dummy+0x14>)
 80002f8:	4803      	ldr	r0, [pc, #12]	@ (8000308 <frame_dummy+0x18>)
 80002fa:	f3af 8000 	nop.w
 80002fe:	bd08      	pop	{r3, pc}
 8000300:	00000000 	.word	0x00000000
 8000304:	24000004 	.word	0x24000004
 8000308:	08000418 	.word	0x08000418

0800030c <main>:

//&=~(1U<<3); FOR GPIOE_MODER
//|=(1U<<1); FOR GPIOE_ODR

int main(void )
{
 800030c:	b480      	push	{r7}
 800030e:	b083      	sub	sp, #12
 8000310:	af00      	add	r7, sp, #0
	RCC_AHB4ENR|=GPIO_E_EN;
 8000312:	4b16      	ldr	r3, [pc, #88]	@ (800036c <main+0x60>)
 8000314:	681b      	ldr	r3, [r3, #0]
 8000316:	4a15      	ldr	r2, [pc, #84]	@ (800036c <main+0x60>)
 8000318:	f043 0310 	orr.w	r3, r3, #16
 800031c:	6013      	str	r3, [r2, #0]
	GPIOE_MODER&=~(1U<<3);
 800031e:	4b14      	ldr	r3, [pc, #80]	@ (8000370 <main+0x64>)
 8000320:	681b      	ldr	r3, [r3, #0]
 8000322:	4a13      	ldr	r2, [pc, #76]	@ (8000370 <main+0x64>)
 8000324:	f023 0308 	bic.w	r3, r3, #8
 8000328:	6013      	str	r3, [r2, #0]
	GPIOE_ODR|=LED_G;
 800032a:	4b12      	ldr	r3, [pc, #72]	@ (8000374 <main+0x68>)
 800032c:	681b      	ldr	r3, [r3, #0]
 800032e:	4a11      	ldr	r2, [pc, #68]	@ (8000374 <main+0x68>)
 8000330:	f043 0302 	orr.w	r3, r3, #2
 8000334:	6013      	str	r3, [r2, #0]
	while(1){
		GPIOE_ODR^=LED_G;
 8000336:	4b0f      	ldr	r3, [pc, #60]	@ (8000374 <main+0x68>)
 8000338:	681b      	ldr	r3, [r3, #0]
 800033a:	4a0e      	ldr	r2, [pc, #56]	@ (8000374 <main+0x68>)
 800033c:	f083 0302 	eor.w	r3, r3, #2
 8000340:	6013      	str	r3, [r2, #0]
		for(unsigned int i=0;i<90000;i++){
 8000342:	2300      	movs	r3, #0
 8000344:	607b      	str	r3, [r7, #4]
 8000346:	e00b      	b.n	8000360 <main+0x54>
		for(unsigned int j=0;j<75;j++);
 8000348:	2300      	movs	r3, #0
 800034a:	603b      	str	r3, [r7, #0]
 800034c:	e002      	b.n	8000354 <main+0x48>
 800034e:	683b      	ldr	r3, [r7, #0]
 8000350:	3301      	adds	r3, #1
 8000352:	603b      	str	r3, [r7, #0]
 8000354:	683b      	ldr	r3, [r7, #0]
 8000356:	2b4a      	cmp	r3, #74	@ 0x4a
 8000358:	d9f9      	bls.n	800034e <main+0x42>
		for(unsigned int i=0;i<90000;i++){
 800035a:	687b      	ldr	r3, [r7, #4]
 800035c:	3301      	adds	r3, #1
 800035e:	607b      	str	r3, [r7, #4]
 8000360:	687b      	ldr	r3, [r7, #4]
 8000362:	4a05      	ldr	r2, [pc, #20]	@ (8000378 <main+0x6c>)
 8000364:	4293      	cmp	r3, r2
 8000366:	d9ef      	bls.n	8000348 <main+0x3c>
		GPIOE_ODR^=LED_G;
 8000368:	e7e5      	b.n	8000336 <main+0x2a>
 800036a:	bf00      	nop
 800036c:	580244e0 	.word	0x580244e0
 8000370:	58021000 	.word	0x58021000
 8000374:	58021014 	.word	0x58021014
 8000378:	00015f8f 	.word	0x00015f8f

0800037c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800037c:	480d      	ldr	r0, [pc, #52]	@ (80003b4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800037e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000380:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000384:	480c      	ldr	r0, [pc, #48]	@ (80003b8 <LoopForever+0x6>)
  ldr r1, =_edata
 8000386:	490d      	ldr	r1, [pc, #52]	@ (80003bc <LoopForever+0xa>)
  ldr r2, =_sidata
 8000388:	4a0d      	ldr	r2, [pc, #52]	@ (80003c0 <LoopForever+0xe>)
  movs r3, #0
 800038a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800038c:	e002      	b.n	8000394 <LoopCopyDataInit>

0800038e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800038e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000390:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000392:	3304      	adds	r3, #4

08000394 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000394:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000396:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000398:	d3f9      	bcc.n	800038e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800039a:	4a0a      	ldr	r2, [pc, #40]	@ (80003c4 <LoopForever+0x12>)
  ldr r4, =_ebss
 800039c:	4c0a      	ldr	r4, [pc, #40]	@ (80003c8 <LoopForever+0x16>)
  movs r3, #0
 800039e:	2300      	movs	r3, #0
  b LoopFillZerobss
 80003a0:	e001      	b.n	80003a6 <LoopFillZerobss>

080003a2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80003a2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80003a4:	3204      	adds	r2, #4

080003a6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80003a6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80003a8:	d3fb      	bcc.n	80003a2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80003aa:	f000 f811 	bl	80003d0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80003ae:	f7ff ffad 	bl	800030c <main>

080003b2 <LoopForever>:

LoopForever:
  b LoopForever
 80003b2:	e7fe      	b.n	80003b2 <LoopForever>
  ldr   r0, =_estack
 80003b4:	24050000 	.word	0x24050000
  ldr r0, =_sdata
 80003b8:	24000000 	.word	0x24000000
  ldr r1, =_edata
 80003bc:	24000000 	.word	0x24000000
  ldr r2, =_sidata
 80003c0:	08000438 	.word	0x08000438
  ldr r2, =_sbss
 80003c4:	24000000 	.word	0x24000000
  ldr r4, =_ebss
 80003c8:	2400001c 	.word	0x2400001c

080003cc <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80003cc:	e7fe      	b.n	80003cc <ADC1_2_IRQHandler>
	...

080003d0 <__libc_init_array>:
 80003d0:	b570      	push	{r4, r5, r6, lr}
 80003d2:	4d0d      	ldr	r5, [pc, #52]	@ (8000408 <__libc_init_array+0x38>)
 80003d4:	4c0d      	ldr	r4, [pc, #52]	@ (800040c <__libc_init_array+0x3c>)
 80003d6:	1b64      	subs	r4, r4, r5
 80003d8:	10a4      	asrs	r4, r4, #2
 80003da:	2600      	movs	r6, #0
 80003dc:	42a6      	cmp	r6, r4
 80003de:	d109      	bne.n	80003f4 <__libc_init_array+0x24>
 80003e0:	4d0b      	ldr	r5, [pc, #44]	@ (8000410 <__libc_init_array+0x40>)
 80003e2:	4c0c      	ldr	r4, [pc, #48]	@ (8000414 <__libc_init_array+0x44>)
 80003e4:	f000 f818 	bl	8000418 <_init>
 80003e8:	1b64      	subs	r4, r4, r5
 80003ea:	10a4      	asrs	r4, r4, #2
 80003ec:	2600      	movs	r6, #0
 80003ee:	42a6      	cmp	r6, r4
 80003f0:	d105      	bne.n	80003fe <__libc_init_array+0x2e>
 80003f2:	bd70      	pop	{r4, r5, r6, pc}
 80003f4:	f855 3b04 	ldr.w	r3, [r5], #4
 80003f8:	4798      	blx	r3
 80003fa:	3601      	adds	r6, #1
 80003fc:	e7ee      	b.n	80003dc <__libc_init_array+0xc>
 80003fe:	f855 3b04 	ldr.w	r3, [r5], #4
 8000402:	4798      	blx	r3
 8000404:	3601      	adds	r6, #1
 8000406:	e7f2      	b.n	80003ee <__libc_init_array+0x1e>
 8000408:	08000430 	.word	0x08000430
 800040c:	08000430 	.word	0x08000430
 8000410:	08000430 	.word	0x08000430
 8000414:	08000434 	.word	0x08000434

08000418 <_init>:
 8000418:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800041a:	bf00      	nop
 800041c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800041e:	bc08      	pop	{r3}
 8000420:	469e      	mov	lr, r3
 8000422:	4770      	bx	lr

08000424 <_fini>:
 8000424:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000426:	bf00      	nop
 8000428:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800042a:	bc08      	pop	{r3}
 800042c:	469e      	mov	lr, r3
 800042e:	4770      	bx	lr
